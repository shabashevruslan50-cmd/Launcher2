name: Build from ZIP

on:
  workflow_dispatch:
    inputs:
      zip_name:
        description: 'Имя ZIP в корне репозитория'
        required: false
        default: 'GameLauncher_release.zip'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ZIP_NAME: ${{ github.event.inputs.zip_name || 'GameLauncher_release.zip' }}

    steps:
      - name: ШАГ 01 — Скачать код
        uses: actions/checkout@v4

      - name: ШАГ 02 — Установить unzip и find
        run: sudo apt-get update && sudo apt-get install -y unzip findutils

      - name: ШАГ 03 — Распаковать ZIP
        shell: bash
        run: |
          set -e
          test -f "$ZIP_NAME" || { echo "❌ ZIP не найден: $ZIP_NAME"; ls -la; exit 1; }
          rm -rf extracted
          unzip -o "$ZIP_NAME" -d extracted
          cand=$(find extracted -maxdepth 3 -type f \( -name settings.gradle -o -name settings.gradle.kts -o -name build.gradle -o -name build.gradle.kts \) | head -n1 || true)
          if [ -z "$cand" ]; then root="extracted"; else root="$(dirname "$cand")"; fi
          echo "PROJ=$root" >> "$GITHUB_ENV"
          echo "Project root: $root"
          ls -la "$root"

      - name: ШАГ 04 — Установить JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: ШАГ 05 — Настроить Android SDK
        uses: android-actions/setup-android@v2

      - name: ШАГ 06 — Поставить платформу и build-tools
        run: |
          yes | sdkmanager --licenses >/dev/null
          sdkmanager "platforms;android-33" "build-tools;33.0.1"

      - name: ШАГ 07 — Подготовить Gradle Wrapper (8.7)
        shell: bash
        run: |
          set -e
          if [ -f "$PROJ/gradlew" ]; then
            chmod +x "$PROJ/gradlew"
          else
            wget -q https://services.gradle.org/distributions/gradle-8.7-bin.zip -O /tmp/gradle.zip
            sudo unzip -q /tmp/gradle.zip -d /opt/gradle
            sudo ln -sf /opt/gradle/gradle-8.7/bin/gradle /usr/local/bin/gradle
            (cd "$PROJ" && gradle wrapper --gradle-version 8.7)
            chmod +x "$PROJ/gradlew"
          fi

      - name: ШАГ 08 — Включить AndroidX и JVM args
        run: |
          f="$PROJ/gradle.properties"
          touch "$f"
          grep -q '^android.useAndroidX=' "$f" || echo 'android.useAndroidX=true' >> "$f"
          grep -q '^android.enableJetifier=' "$f" || echo 'android.enableJetifier=true' >> "$f"
          grep -q '^org.gradle.jvmargs=' "$f" || echo 'org.gradle.jvmargs=-Xmx3g -Dfile.encoding=UTF-8' >> "$f"
          echo "----- gradle.properties -----"
          cat "$f"

      - name: ШАГ 09 — Сборка RELEASE (подробные логи)
        run: |
          cd "$PROJ"
          ./gradlew --stacktrace --info --no-daemon assembleRelease

      - name: ШАГ 10 — Найти APK и переименовать
        id: find_apk
        run: |
          APK=$(find "$PROJ" -type f -name "*release*.apk" | head -n1 || true)
          if [ -z "$APK" ]; then
            echo "apk_path=" >> $GITHUB_OUTPUT
            echo "APK не найден"
            exit 1
          fi
          echo "Найден APK: $APK"
          mkdir -p out
          cp "$APK" out/GameLauncher.apk
          echo "apk_path=out/GameLauncher.apk" >> $GITHUBOUTPUT

      - name: ШАГ 11 — Сохранить APK
        if: steps.find_apk.outputs.apk_path != ''
        uses: actions/upload-artifact@v4
        with:
          name: GameLauncher-APK
          path: ${{ steps.find_apk.outputs.apk_path }}

      - name: ШАГ 12 — Сохранить журналы сборки (всегда)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-logs
          if-no-files-found: ignore
          path: |
            ${{ env.PROJ }}/**/reports/**
            ${{ env.PROJ }}/**/outputs/logs/**
